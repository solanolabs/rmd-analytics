#properties related to unit testing and running at the command line go here
logging.level.root=DEBUG
logging.level.org.springframework=INFO
spring.profiles.active=local

#used by integration test to call analytic
predix.analytic.restProtocol=http
predix.analytic.restHost=put.your.analytic.host
predix.analytic.restPort=put.your.analytic.port
predix.analytic.restBaseResource=api/v1/ref_app_analytic/execution

#used by integration to call FDH locally
predix.fdh.restHost=put.your.FDH.DataExchange.url.here
predix.fdh.restPort=put.your.FDH.DataExchange.port.here

#if you are behind a corporate proxy/firewall and want to access Predix Cloud
#predix.oauth.proxyHost =put.your.proxyHost.here 
#predix.oauth.proxyPort=put.your.proxyPort.here

#used by integration test within FDH to call UAA
predix.oauth.restHost=put.your.UAA.url.here
predix.oauth.clientId=put.your.UAA.clientId.here

# Spring Security adds the following headers to the http response
security.basic.enabled=false
security.headers.cache=true 
# Enable cache control HTTP headers.
security.headers.content-type=true 
# Enable "X-Content-Type-Options" header.
security.headers.frame=true
security.headers.xss=true
security.filter-order=1

#used by integration test within FDH to call Asset
predix.asset.restHost=put.your.ASSET.service.host.here
predix.asset.zoneid=put.your.ASSET.zoneid.here
predix.asset.restPort=put.your.ASSET.port.here

#used by integration test within FDH to call Time Series
predix.timeseries.baseUrl=put.your.TS.uri.here
predix.timeseries.zoneid=put.your.TS.zoneid.here
predix.timeseries.ingestUri=put.your.TS.Websocket.uri.here

#deprecated - these override variables we are refactoring away from. 
predix.timeseries.override.oauthOverride=false
predix.timeseries.override.oauthClientId=clientuser:clientpass
predix.timeseries.override.oauthRestHost=put.your.TS.uaa.url.here

#used by integration test within FDH to call Time Series ingestion websocket endpoint
predix.websocket.pool.maxIdle=5
predix.websocket.pool.maxActive=5
predix.websocket.pool.maxWait=8000
predix.websocket.pool.maxInstances=5
